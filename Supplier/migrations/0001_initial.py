# Generated by Django 4.1.6 on 2023-03-04 09:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExcelFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='excel')),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('link', models.CharField(max_length=300, null=True)),
                ('channel', models.CharField(choices=[('Facebook Group', 'Facebook Group'), ('Facebook Fanpage', 'Facebook Fanpage'), ('Facebook Personal', 'Facebook Personal'), ('Tiktok Community', 'Tiktok Community'), ('Tiktok Personal', 'Tiktok Personal'), ('Youtube Community', 'Youtube Community'), ('Youtube Personal', 'Youtube Personal'), ('Instagram', 'Instagram'), ('Forum', 'Forum'), ('Website', 'Website'), ('Linkedin', 'Linkedin'), ('Others', 'Others')], max_length=18, null=True)),
                ('follower', models.CharField(max_length=20)),
                ('follower_2', models.DecimalField(decimal_places=0, editable=False, max_digits=20, null=True)),
                ('kol_tier', models.CharField(editable=False, max_length=20, null=True)),
                ('engagement_rate_percent', models.FloatField(null=True, verbose_name='ER(%)')),
                ('engagement_rate_absolute', models.FloatField(editable=False, null=True, verbose_name='ER (Ab.)')),
                ('location', models.CharField(choices=[('Toàn Quốc', 'Toàn Quốc'), ('An Giang', 'An Giang'), ('Bà Rịa-Vũng Tàu', 'Bà Rịa-Vũng Tàu'), ('Bạc Liêu', 'Bạc Liêu'), ('Bắc Kạn', 'Bắc Kạn'), ('Bắc Giang', 'Bắc Giang'), ('Bắc Ninh', 'Bắc Ninh'), ('Bến Tre', 'Bến Tre'), ('Bình Dương', 'Bình Dương'), ('Bình Định', 'Bình Định'), ('Bình Phước', 'Bình Phước'), ('Bình Thuận', 'Bình Thuận'), ('Cà Mau', 'Cà Mau'), ('Cao Bằng', 'Cao Bằng'), ('Cần Thơ', 'Cần Thơ'), ('Đà Nẵng', 'Đà Nẵng'), ('Đắk Lắk', 'Đắk Lắk'), ('Đắk Nông', 'Đắk Nông'), ('Điện Biên', 'Điện Biên'), ('Đồng Nai', 'Đồng Nai'), ('Đồng Tháp', 'Đồng Tháp'), ('Gia Lai', 'Gia Lai'), ('Hà Giang', 'Hà Giang'), ('Hà Nam', 'Hà Nam'), ('Hà Nội', 'Hà Nội'), ('Hà Tĩnh', 'Hà Tĩnh'), ('Hải Dương', 'Hải Dương'), ('Hải Phòng', 'Hải Phòng'), ('Hậu Giang', 'Hậu Giang'), ('Hòa Bình', 'Hòa Bình'), ('Hồ Chí Minh', 'Thành phố Hồ Chí Minh'), ('Hưng Yên', 'Hưng Yên'), ('Khánh Hoà', 'Khánh Hoà'), ('Kiên Giang', 'Kiên Giang'), ('Kon Tum', 'Kon Tum'), ('Lai Châu', 'Lai Châu'), ('Lạng Sơn', 'Lạng Sơn'), ('Lào Cai', 'Lào Cai'), ('Lâm Đồng', 'Lâm Đồng'), ('Đà Lạt', 'Đà Lạt'), ('Long An', 'Long An'), ('Nam Định', 'Nam Định'), ('Nghệ An', 'Nghệ An'), ('Ninh Bình', 'Ninh Bình'), ('Ninh Thuận', 'Ninh Thuận'), ('Phú Thọ', 'Phú Thọ'), ('Phú Yên', 'Phú Yên'), ('Quảng Bình', 'Quảng Bình'), ('Quảng Nam', 'Quảng Nam'), ('Quảng Ngãi', 'Quảng Ngãi'), ('Quảng Ninh', 'Quảng Ninh'), ('Quảng Trị', 'Quảng Trị'), ('Sóc Trăng', 'Sóc Trăng'), ('Sơn La', 'Sơn La'), ('Tây Ninh', 'Tây Ninh'), ('Thái Bình', 'Thái Bình'), ('Thái Nguyên', 'Thái Nguyên'), ('Thanh Hóa', 'Thanh Hóa'), ('Thừa Thiên-Huế', 'Thừa Thiên-Huế'), ('Tiền Giang', 'Tiền Giang'), ('Trà Vinh', 'Trà Vinh'), ('Tuyên Quang', 'Tuyên Quang'), ('Vĩnh Long', 'Vĩnh Long'), ('Vĩnh Phúc', 'Vĩnh Phúc'), ('Yên Bái', 'Yên Bái'), ('Nước Ngoài', 'Nước Ngoài')], max_length=20, null=True)),
                ('year_of_birth', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(2030), django.core.validators.MinValueValidator(1900)])),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('General', 'General')], max_length=10, null=True)),
                ('fields', multiselectfield.db.fields.MultiSelectField(choices=[('Singer', 'Singer'), ('Rapper', 'Rapper'), ('DJ', 'DJ'), ('Music Producer', 'Music Producer'), ('Dancer', 'Dancer'), ('Streamer', 'Streamer'), ('Content Creator', 'Content Creator'), ('Reviewer', 'Reviewer'), ('Blogger', 'Blogger'), ('Footballer', 'Footballer'), ('Gymer/Fitness', 'Gymer/Fitness'), ('Model', 'Model'), ('Showbiz', 'Showbiz'), ('Make-up', 'Make-up'), ('Cosmetic/Skincare', 'Cosmetic/Skincare'), ('Fashion', 'Fashion'), ('Travel', 'Travel'), ('Lifestyle', 'Lifestyle'), ('News', 'News'), ('Education', 'Education'), ('Teacher/Coach', 'Teacher/Coach'), ('Office staff', 'Office staff'), ('Freelancer', 'Freelancer'), ('Business', 'Business'), ('Lawyer', 'Lawyer'), ('Student', 'Student'), ('Doctor', 'Doctor'), ('Architect', 'Architect'), ('Smarthome', 'Smarthome'), ('Real estate', 'Real estate'), ('Home appliance', 'Home appliance'), ('Interior house', 'Interior house'), ('Decor & Design', 'Decor & Design'), ('Investment', 'Investment'), ('Insurance', 'Insurance'), ('Economics & Law', 'Economics & Law'), ('Capital Market', 'Capital Market'), ('Banking', 'Banking'), ('Kid', 'Kid'), ('Hot Mom/Dad', 'Hot Mom/Dad'), ('Automotive', 'Automotive'), ('Director', 'Director'), ('Actor/Actress', 'Actor/Actress'), ('Health & Medicine', 'Health & Medicine'), ('Youth & GenZ', 'Youth & GenZ'), ('Media & Advertisement', 'Media & Advertisement'), ('Game & Esport', 'Game & Esport'), ('MC & Editor', 'MC & Editor'), ('Food & Drink', 'Food & Drink'), ('Technology & Ecommerce', 'Technology & Ecommerce'), ('Celeb', 'Celeb'), ('General', 'General'), ('Other', 'Other')], max_length=500, null=True)),
                ('original_cost_picture', models.DecimalField(decimal_places=0, max_digits=20, null=True, verbose_name='Org. cost - Picture')),
                ('original_cost_video', models.DecimalField(decimal_places=0, max_digits=20, null=True, verbose_name='Org. cost - Video')),
                ('original_cost_event', models.DecimalField(decimal_places=0, max_digits=20, null=True, verbose_name='Org. cost - Event')),
                ('original_cost_tvc', models.DecimalField(decimal_places=0, max_digits=20, null=True, verbose_name='Org. cost - TVC')),
                ('kpi', models.CharField(max_length=150, null=True, verbose_name='KPI')),
                ('discount', models.CharField(max_length=150, null=True)),
                ('supplier_name', models.CharField(max_length=200, null=True)),
                ('booking_contact_name', models.CharField(max_length=200, null=True)),
                ('booking_contact_phone', models.CharField(max_length=200, null=True)),
                ('booking_contact_email', models.CharField(max_length=200, null=True)),
                ('profile', models.CharField(max_length=300, null=True, verbose_name='Profile/Quotation')),
                ('latest_update', models.DateTimeField(null=True)),
                ('handle_by', models.CharField(max_length=100, null=True)),
                ('group_chat_name', models.CharField(max_length=100, null=True)),
                ('group_chat_channel', models.CharField(choices=[('Zalo', 'Zalo'), ('Viber', 'Viber'), ('Facebook', 'Facebook')], max_length=8, null=True, verbose_name='Group Chat Channel')),
                ('lana_leader', models.BooleanField(default=False, null=True)),
                ('history', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('import_data_as_admin', 'Can import data'), ('export_excel_50_seller', 'Can export excel as a seller role (50)'), ('export_excel_100_buyer', 'Can export excel as a buyer role (100)'), ('export_excel_1000_admin', 'Can export excel as an admin role')],
            },
        ),
    ]
